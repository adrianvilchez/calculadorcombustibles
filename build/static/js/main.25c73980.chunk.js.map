{"version":3,"sources":["components/Header.jsx","components/Error.jsx","helper.js","components/Formulario.jsx","components/Gasto.jsx","components/Carga.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContenedorHeader","styled","header","TextoH1","h1","Header","titulo","prpTypes","PropTypes","string","isRequired","MensajeH2","h2","Error","mensaje","calculoCombustible","combustible","consumo","calculo","parseFloat","tipoConsumo","tipoCoste","Campos","div","Etiqueta","label","Select","select","InputText","input","InputRadio","Boton","button","Formulario","guardarGastos","guardarCargando","useState","marca","modelo","kilometros","costeKm","costeTotal","datos","guardarDatos","error","guardarError","guardarBusqueda","modelos","guardarModelos","marcaSeleccionada","guardarMarcaSeleccionada","infoVehiculo","guardarInfoVehiculo","marcas","Ford","id","Hyundai","Audi","BMW","Mercedes","Seat","obtenerInformacion","Object","keys","map","key","e","target","name","value","modelosAux","m","push","filter","info","useEffect","precioKm","setTimeout","toFixed","onSubmit","preventDefault","trim","onChange","type","placeholder","checked","ContenedorGasto","UlLista","ul","Gasto","console","log","toString","replace","formateoGastos","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","object","Carga","props","ContenedorPrincipal","ContenedorFormulario","App","gastos","cargando","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25c73980.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContenedorHeader = styled.header`\r\n    background-color: #159463;\r\n    padding: 1rem;\r\n    font-weight: bold;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst TextoH1 = styled.h1`\r\n    font-size: 2rem;\r\n    margin: 0;\r\n    font-family: 'Roboto 24', sans-serif;\r\n    text-align: center;\r\n`;\r\n\r\nconst Header = ({ titulo }) => {\r\n    return (\r\n        <ContenedorHeader>\r\n            <TextoH1>{ titulo }</TextoH1>\r\n        </ContenedorHeader>\r\n    );\r\n}\r\n\r\nHeader.prpTypes = {\r\n    titulo: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nconst MensajeH2 = styled.h2`\r\n    width: 100%;\r\n    padding: 1rem;\r\n    color: red;\r\n    text-align: center;\r\n`;\r\n\r\nconst Error = ( { mensaje } ) => {\r\n    return (\r\n        <MensajeH2>{ mensaje }</MensajeH2>\r\n    )\r\n}\r\n\r\nexport default Error;\r\n","export function calculoCombustible(combustible, consumo) {\r\n\r\n    let calculo = null;\r\n\r\n    const precioGasolina = 1.099;\r\n    const precioGasoil = 0.950;\r\n    const precioElectrico = 0.119;\r\n    \r\n    switch (combustible) {\r\n        case \"gasoleo\":\r\n        case \"diesel\":\r\n            calculo = precioGasoil * consumo / 100;\r\n            break;\r\n        case \"gasolina\":\r\n            calculo = precioGasolina * consumo / 100;\r\n            break;\r\n        case \"electrico\":\r\n            calculo = precioElectrico * consumo / 100;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return parseFloat(calculo);\r\n}\r\n\r\nexport function formateoGastos(datos) {\r\n\r\n    console.log(datos);\r\n\r\n    const datosFormateados = {\r\n        combustible: datos.combustible,\r\n        consumo: datos.consumo.toString().replace('.', ','),\r\n        costeKm: datos.costeKm.toString().replace('.', ','),\r\n        costeTotal: datos.costeTotal.toString().replace('.', ',')\r\n    };\r\n\r\n    return datosFormateados;\r\n}\r\n\r\nexport function tipoConsumo(combustible) {\r\n    return combustible === 'electrico' ? 'kWh' : 'l/100km';\r\n}\r\n\r\nexport function tipoCoste(combustible) {\r\n    return combustible === 'electrico' ? '€/kW' : '€/Km';\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Error from './Error';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { calculoCombustible } from '../helper';\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nconst Campos = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    align-items: center;\r\n`;\r\n\r\nconst Etiqueta = styled.label`\r\n    flex: 0 0 100px;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border: 1px solid black;\r\n    --webkit-appearance: none;\r\n`;\r\n\r\nconst InputText = styled.input`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border: 1px solid black;\r\n    --webkit-appearance: none;\r\n`;\r\n\r\nconst InputRadio = styled.input`\r\n    margin: 0 1rem;\r\n`;\r\n\r\nconst Boton = styled.button`\r\n    background-color: #159463;\r\n    font-size: 14;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    color: #FFFFFF;\r\n    text-transform: uppercase;\r\n    font-weight: border-left;\r\n    border: none;\r\n    transition: background-color .3s ease;\r\n    margin-top: 3rem;\r\n\r\n    &:hover {\r\n        background-color: #0d5a3d;\r\n        cursor: pointer;\r\n        \r\n    }\r\n`;\r\n\r\nconst Formulario = ( { guardarGastos, guardarCargando }) => {\r\n   \r\n    const [ datos, guardarDatos ] = useState({\r\n        marca: '',\r\n        modelo: '',\r\n        kilometros: 0,\r\n        combustible: '',\r\n        consumo: 0,\r\n        costeKm: 0,\r\n        costeTotal: 0\r\n    });\r\n\r\n    const [ error, guardarError ] = useState(false);\r\n    const [ busqueda, guardarBusqueda ] = useState(false);\r\n\r\n    // leer datos del formulario y meterlos en el state\r\n    const [ modelos, guardarModelos ] = useState([]);\r\n    const [ marcaSeleccionada, guardarMarcaSeleccionada ] = useState('');\r\n    const [ infoVehiculo, guardarInfoVehiculo ] = useState({});\r\n\r\n    // extraemos los valores del state\r\n    const { marca, modelo, kilometros, combustible, consumo, costeKm, costeTotal } = datos;\r\n    \r\n    const marcas = {\r\n        Ford: [\r\n            { id : 1, modelo: 'Focus', consumo: 5.3 },\r\n            { id : 2, modelo: 'Fusión', consumo: 10.3 },\r\n            { id : 3, modelo: 'Mondeo', consumo: 8.3 },\r\n            { id : 4, modelo: 'Fiesta', consumo: 7.5 }\r\n        ],\r\n        Hyundai: [\r\n            { id : 5, modelo: 'Accent', consumo: 5.3 },\r\n            { id : 6, modelo: 'IONIQ', consumo: 10.3 },\r\n            { id : 7, modelo: 'Kona', consumo: 8.3 },\r\n            { id : 8, modelo: 'Tucson', consumo: 7.5 }\r\n        ],\r\n        Audi: [\r\n            { id : 9, modelo: 'A4', consumo: 5.3 },\r\n            { id : 10, modelo: 'A6', consumo: 10.3 },\r\n            { id : 11, modelo: 'A8', consumo: 8.3 },\r\n            { id : 12, modelo: 'TT', consumo: 7.5 }\r\n        ],\r\n        BMW: [\r\n            { id : 13, modelo: 'M3', consumo: 5.3 },\r\n            { id : 14, modelo: 'M6', consumo: 10.3 },\r\n            { id : 15, modelo: 'X3', consumo: 8.3 },\r\n            { id : 16, modelo: '700', consumo: 7.5 }\r\n        ],\r\n        Mercedes: [\r\n            { id : 17, modelo: 'A180', consumo: 5.3 },\r\n            { id : 18, modelo: 'SLK', consumo: 10.3 },\r\n            { id : 19, modelo: 'GLS', consumo: 8.3 },\r\n            { id : 20, modelo: 'AMG', consumo: 7.5 }\r\n        ],\r\n        Seat: [\r\n            { id : 21, modelo: 'Ibiza', consumo: 5.3 },\r\n            { id : 22, modelo: 'León', consumo: 10.3 },\r\n            { id : 23, modelo: 'Cordoba', consumo: 8.3 },\r\n            { id : 24, modelo: 'Arona', consumo: 7.5 }\r\n        ]\r\n    };\r\n    \r\n    const listaMarcas = Object.keys(marcas).map(key => ({\r\n        marca: key\r\n      }));\r\n\r\n    const obtenerInformacion = e => {\r\n        //e.preventDefault();\r\n\r\n        if (e.target.name === 'marca' && e.target.value !== '') {\r\n\r\n            let modelosAux = [];\r\n\r\n            marcas[e.target.value].map((m, key) => (\r\n                modelosAux.push(m.modelo)\r\n            ));\r\n\r\n            guardarMarcaSeleccionada(e.target.value);\r\n            guardarModelos(e.target.value !== \"\" ? modelosAux : \"\");\r\n\r\n        } else if (e.target.name === 'modelo') {\r\n\r\n            marcas[marcaSeleccionada].filter(info => {\r\n                if (info.modelo == e.target.value) {\r\n                    guardarInfoVehiculo(info);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (e.target.name === 'marca' && e.target.value === '') {\r\n            guardarModelos('');\r\n        }\r\n\r\n        guardarDatos({\r\n            ...datos, // hacemos una copia del state\r\n            [ e.target.name ] : e.target.value\r\n        })\r\n\r\n        guardarBusqueda(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const precioKm = calculoCombustible(combustible, infoVehiculo.consumo)\r\n\r\n        if (combustible === '' || consumo === 0 || costeTotal === 0) return null;\r\n\r\n        guardarCargando(true);\r\n\r\n        // 3 segundos para que desaparezca la carga\r\n        setTimeout(() => {\r\n            guardarCargando(false);\r\n\r\n            guardarGastos({\r\n                datos,\r\n                consumo : infoVehiculo.consumo,\r\n                costeKm : precioKm.toFixed(3),\r\n                costeTotal : (precioKm * kilometros).toFixed(3)\r\n            })\r\n    \r\n            guardarDatos({\r\n                ...datos,\r\n                consumo : 0,\r\n                costeKm : 0,\r\n                costeTotal : 0\r\n            })\r\n        }, 3000);\r\n\r\n        \r\n      }, [ datos ]);\r\n      \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (marca.trim() === ''\r\n            || modelo.trim() === ''\r\n            || kilometros == 0\r\n            || kilometros === ''\r\n            || combustible.trim() === '') {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        guardarError(false);\r\n\r\n        // Cálculos coste combustibles\r\n        const precioKm = calculoCombustible(combustible, infoVehiculo.consumo)\r\n\r\n        guardarDatos({\r\n            ...datos,\r\n            consumo : infoVehiculo.consumo,\r\n            costeKm : precioKm.toFixed(3),\r\n            costeTotal : (precioKm * kilometros).toFixed(3)\r\n        });\r\n\r\n        guardarBusqueda(true);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n\r\n            {\r\n                error\r\n                ?\r\n                <Error mensaje = 'No pueden haber campos vacíos'/>\r\n                :\r\n                null\r\n            }\r\n\r\n            <Campos>\r\n                <Etiqueta>Marca</Etiqueta>\r\n                <Select\r\n                    name = 'marca'\r\n                    value = { marca }\r\n                    onChange = { obtenerInformacion }\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"Ford\">Ford</option>\r\n                    <option value=\"Hyundai\">Hyundai</option>\r\n                    <option value=\"Audi\">Audi</option>\r\n                    <option value=\"BMW\">BMW</option>\r\n                    <option value=\"Mercedes\">Mercedes</option>\r\n                    <option value=\"Seat\">Seat</option>\r\n                </Select>\r\n            </Campos>\r\n\r\n            <Campos>\r\n                <Etiqueta>Modelo</Etiqueta>\r\n                <Select\r\n                    name = 'modelo'\r\n                    value = { modelo }\r\n                    onChange = { obtenerInformacion }\r\n                >\r\n                    <option value=\"\">-- Seleccione una marca --</option>\r\n                    \r\n                    { modelos !== '' ? modelos.map((m, key) => (\r\n                        <option key = { key } value  ={ m }>\r\n                            { m }\r\n                        </option>\r\n                    )) : null}\r\n                </Select>\r\n            </Campos>\r\n\r\n            <Campos>\r\n                <Etiqueta>Kilómetros</Etiqueta>\r\n                <InputText\r\n                    type = 'number'\r\n                    name = 'kilometros'\r\n                    value = { parseFloat(kilometros) }\r\n                    onChange = { obtenerInformacion }\r\n                    placeholder = 'Introduce los kilómetros'\r\n                />\r\n            </Campos>\r\n\r\n            <Campos>\r\n                <Etiqueta>Combustible</Etiqueta>\r\n                <InputRadio\r\n                    type = 'radio'\r\n                    name = 'combustible'\r\n                    value = 'gasolina'// 1,099 €/kmh | 7,5l a los 100 km\r\n                                      // 1,099 * 7,5 / 100 = 0.082425 €/km\r\n                    checked = { combustible === 'gasolina' }\r\n                    onChange = { obtenerInformacion }\r\n                /> Gasolina\r\n\r\n                <InputRadio\r\n                    type = 'radio'\r\n                    name = 'combustible'\r\n                    value = 'gasoleo' // 0,950 €/kmh | 7,5l a los 100 km\r\n                                      // 0,950 * 7,5 / 100 = 0.07125 €/km\r\n                    checked = { combustible === 'gasoleo' }\r\n                    onChange = { obtenerInformacion }\r\n                /> Gasóleo (Diesel)\r\n\r\n                <InputRadio\r\n                    type = 'radio'\r\n                    name = 'combustible'\r\n                    value = 'electrico' // 0,119 €/kwh | 14kwh a los 100km: \r\n                                        // 0,119 * 14 / 100 = 0.01666 €/km\r\n                    checked = { combustible === 'electrico' }\r\n                    onChange = { obtenerInformacion }\r\n                /> Eléctrico\r\n            </Campos>\r\n\r\n            <Boton\r\n                type = 'submit'\r\n                value = ''>\r\n                Buscar\r\n            </Boton>\r\n        </form>\r\n    )\r\n}\r\n\r\nFormulario.propTypes = {\r\n    guardarGastos: PropTypes.func.isRequired,\r\n    guardarCargando: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario;","import React, { Fragment } from 'react';\r\nimport { formateoGastos } from '../helper';\r\nimport { tipoConsumo } from '../helper';\r\nimport { tipoCoste } from '../helper';\r\n\r\nimport styled from '@emotion/styled';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ContenedorGasto = styled.div`\r\n    background-color: #0d5a3d;\r\n    color: #FFFFFF;\r\n    padding: 1em;\r\n    margin-top: 2em;\r\n`;\r\n\r\nconst UlLista = styled.ul`\r\n    text-align: left;\r\n`;\r\n\r\nconst Gasto = ( { datos } ) => {\r\n\r\n    const { combustible, consumo, costeKm, costeTotal} = formateoGastos(datos);\r\n\r\n    if (combustible === '' || consumo === 0 ||\r\n        costeKm === 0 ||\r\n        costeTotal === 0) return null; \r\n        \r\n    return (\r\n        <Fragment>\r\n            <ContenedorGasto>\r\n                <TransitionGroup\r\n                    component = 'p'\r\n                    className = 'resultado'\r\n                >\r\n                    <CSSTransition\r\n                        classNames ='resultado'\r\n                        key = { costeKm }\r\n                        timeout = {{\r\n                            enter: 500,\r\n                            exit: 500\r\n                        }}\r\n                    >\r\n                        <UlLista>\r\n                            <li>\r\n                                <p>Consumo/100km: { consumo } { tipoConsumo(combustible) }</p>\r\n                            </li>\r\n                            <li>\r\n                            <p>{ tipoCoste(combustible) }: { costeKm } €</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Coste Total: { costeTotal } €</p>\r\n                            </li>\r\n                        </UlLista>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            </ContenedorGasto>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nGasto.prpTypes = {\r\n    datos: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Gasto;\r\n","import React, { Fragment } from 'react';\r\n\r\nimport './Carga.css';\r\n\r\nconst Carga = props => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"sk-chase\">\r\n                <div className=\"sk-chase-dot\"></div>\r\n                <div className=\"sk-chase-dot\"></div>\r\n                <div className=\"sk-chase-dot\"></div>\r\n                <div className=\"sk-chase-dot\"></div>\r\n                <div className=\"sk-chase-dot\"></div>\r\n                <div className=\"sk-chase-dot\"></div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Carga\r\n","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport Gasto from './components/Gasto';\nimport Carga from './components/Carga';\n\nimport styled from '@emotion/styled';\n\nconst ContenedorPrincipal = styled.div`\n    max-width: 700px;\n    margin: 0 auto;\n    margin-top: 2em;\n`;\n\nconst ContenedorFormulario = styled.div`\n    background-color: #FFFFFF;\n    padding: 3rem;\n    margin: 0 auto;\n`;\n\nfunction App() {\n\n    const [ gastos, guardarGastos ] = useState({\n        datos: {\n            marca: '',\n            modelo: '',\n            kilometros: 0,\n            combustible: '',\n            consumo : 0,\n            costeKm : 0,\n            costeTotal : 0\n        }\n    });\n\n    const [ cargando, guardarCargando ] = useState(false);\n\n    const { datos } = gastos;\n\n  return (\n    <ContenedorPrincipal>\n        <Header\n            titulo = 'Calculador de combustibles'\n        />\n\n        <ContenedorFormulario>\n            <Formulario\n                guardarGastos = { guardarGastos }\n                guardarCargando = { guardarCargando }\n            />\n\n            <Gasto\n                datos = { datos }\n            />\n\n        </ContenedorFormulario>\n\n        { cargando ? <Carga /> : null }\n        \n    </ContenedorPrincipal>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}